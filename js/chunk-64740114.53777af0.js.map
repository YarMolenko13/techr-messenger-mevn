{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./src/components/test.vue","webpack:///./src/components/test.vue?2cf1"],"names":["$","toAbsoluteIndex","toInteger","toLength","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","splice","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","this","len","length","actualStart","argumentsLength","arguments","TypeError","id","add","remove","name","items","item","key","class","data","nextNum","methods","randomIndex","floor","random","render","__scopeId"],"mappings":"gHACA,IAAIA,EAAI,EAAQ,QACZC,EAAkB,EAAQ,QAC1BC,EAAY,EAAQ,QACpBC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QACzBC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,UAEnDE,EAAMC,KAAKD,IACXE,EAAMD,KAAKC,IACXC,EAAmB,iBACnBC,EAAkC,kCAKtCb,EAAE,CAAEc,OAAQ,QAASC,OAAO,EAAMC,QAASR,GAAuB,CAChES,OAAQ,SAAgBC,EAAOC,GAC7B,IAIIC,EAAaC,EAAmBC,EAAGC,EAAGC,EAAMC,EAJ5CC,EAAItB,EAASuB,MACbC,EAAMzB,EAASuB,EAAEG,QACjBC,EAAc7B,EAAgBiB,EAAOU,GACrCG,EAAkBC,UAAUH,OAWhC,GATwB,IAApBE,EACFX,EAAcC,EAAoB,EACL,IAApBU,GACTX,EAAc,EACdC,EAAoBO,EAAME,IAE1BV,EAAcW,EAAkB,EAChCV,EAAoBV,EAAIF,EAAIP,EAAUiB,GAAc,GAAIS,EAAME,IAE5DF,EAAMR,EAAcC,EAAoBT,EAC1C,MAAMqB,UAAUpB,GAGlB,IADAS,EAAIjB,EAAmBqB,EAAGL,GACrBE,EAAI,EAAGA,EAAIF,EAAmBE,IACjCC,EAAOM,EAAcP,EACjBC,KAAQE,GAAGpB,EAAegB,EAAGC,EAAGG,EAAEF,IAGxC,GADAF,EAAEO,OAASR,EACPD,EAAcC,EAAmB,CACnC,IAAKE,EAAIO,EAAaP,EAAIK,EAAMP,EAAmBE,IACjDC,EAAOD,EAAIF,EACXI,EAAKF,EAAIH,EACLI,KAAQE,EAAGA,EAAED,GAAMC,EAAEF,UACbE,EAAED,GAEhB,IAAKF,EAAIK,EAAKL,EAAIK,EAAMP,EAAoBD,EAAaG,WAAYG,EAAEH,EAAI,QACtE,GAAIH,EAAcC,EACvB,IAAKE,EAAIK,EAAMP,EAAmBE,EAAIO,EAAaP,IACjDC,EAAOD,EAAIF,EAAoB,EAC/BI,EAAKF,EAAIH,EAAc,EACnBI,KAAQE,EAAGA,EAAED,GAAMC,EAAEF,UACbE,EAAED,GAGlB,IAAKF,EAAI,EAAGA,EAAIH,EAAaG,IAC3BG,EAAEH,EAAIO,GAAeE,UAAUT,EAAI,GAGrC,OADAG,EAAEG,OAASD,EAAMP,EAAoBD,EAC9BE,M,sIChEFY,GAAG,a,wEAAR,eAQM,MARN,EAQM,CAPF,eAAiC,UAAxB,QAAK,8BAAE,EAAAC,KAAA,EAAAA,IAAA,sBAAK,OACrB,eAAuC,UAA9B,QAAK,8BAAE,EAAAC,QAAA,EAAAA,OAAA,sBAAQ,UACxB,eAImB,QAJDC,KAAK,QAAM,C,WAC3B,iBAAqB,E,mBAA3B,eAEO,2BAFc,EAAAC,OAAK,SAAbC,G,wBAAb,eAEO,QAFsBC,IAAKD,EAAME,MAAM,a,eACzCF,GAAI,M,qBAOE,G,UAAA,CACXF,KAAM,OACNK,KAFW,WAGP,MAAO,CACHJ,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCK,QAAS,KAGjBC,QAAS,CACLC,YADK,WAED,OAAOnC,KAAKoC,MAAMpC,KAAKqC,SAAWpB,KAAKW,MAAMT,SAEjDM,IAJK,WAKDR,KAAKW,MAAMrB,OAAOU,KAAKkB,cAAe,EAAGlB,KAAKgB,YAElDP,OAPK,WAQDT,KAAKW,MAAMrB,OAAOU,KAAKkB,cAAe,OC1BlD,EAAOG,OAASA,EAChB,EAAOC,UAAY,kBAEJ","file":"js/chunk-64740114.53777af0.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","<template>\r\n    <div id=\"list-demo\">\r\n        <button @click=\"add\">Add</button>\r\n        <button @click=\"remove\">Remove</button>\r\n        <transition-group name=\"list\">\r\n    <span v-for=\"item in items\" :key=\"item\" class=\"list-item\">\r\n      {{ item }}\r\n    </span>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"test\",\r\n    data() {\r\n        return {\r\n            items: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n            nextNum: 10\r\n        }\r\n    },\r\n    methods: {\r\n        randomIndex() {\r\n            return Math.floor(Math.random() * this.items.length)\r\n        },\r\n        add() {\r\n            this.items.splice(this.randomIndex(), 0, this.nextNum++)\r\n        },\r\n        remove() {\r\n            this.items.splice(this.randomIndex(), 1)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import { render } from \"./test.vue?vue&type=template&id=67facc76&scoped=true\"\nimport script from \"./test.vue?vue&type=script&lang=js\"\nexport * from \"./test.vue?vue&type=script&lang=js\"\nscript.render = render\nscript.__scopeId = \"data-v-67facc76\"\n\nexport default script"],"sourceRoot":""}